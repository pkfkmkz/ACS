#*******************************************************************************
# E.S.O. - ACS project
#
# "@(#) $Id: Makefile.conf,v 1.102 2013/02/15 11:14:33 acaproni Exp $"
# "@(#) $Id: Makefile.conf,v 1.102 2013/02/15 11:14:33 acaproni Exp $"
#
#*******************************************************************************

#
# General definitions
#
#

# force Korn shell as the shell used to interpret the commands
SHELL = /bin/ksh

#
# This is the TAG used to build the source directories
#
ACSTAG=ACS-12_1_0-TEMP
ARCHIVETAG=ARCHIVE-12_2-B
#ACSTAG=HEAD
#ARCHIVETAG=HEAD

#
# This is the place where the ACS installation can be found
#
SOURCE=/
PREF=alma/ACS-12.1
#
# and the ACS version identifier
ACS_VERSION=ACS_12_1

#
# This is the place where ACS distributions can be built from.
# Should be a local disk to make the build faster
#
ACSBUILDDIR=/diska/alma_tmp

##### End of configurable section #####

PLATFORM := $(shell uname)
ifdef NO-LGPL
    TYPE:=-NO-LGPL
    BUILD-NO-LGPL:="HAS_NO-LGPL=TRUE"
else
    BUILD-NO-LGPL:="HAS_NO-LGPL=FALSE"
endif
ifdef VX-WORKS
    TYPE:=$(TYPE)-VX
endif

#
# Makes sure that PARENT_DEST is properly defined.
# If it is not inherited from the caller (recursive make)
# it is the parent directory of this directory.
#
ifndef PARENT_DEST
    PARENT_DEST=..
endif

#
# This is the place where distribution files have to be put
#
DEST=$(PARENT_DEST)/$(PLATFORM)$(TYPE)

#
# Some files are identical in the various distributions.
# Insteaded of making copies, they are simply linked
# from a master into the destination
#
DEST_MASTER=$(PARENT_DEST)/Linux
DEST_MASTER_NO-LGPL=$(PARENT_DEST)/Linux-NO-LGPL


########################################################
# CHECK TARGETS
# These tags are used to check for proper configuration
# of a target machine.
########################################################

check-vx:
       ifdef VX-WORKS
	@echo "Checking for VX-WORKS configuration"
	@if [ "X$(WIND_BASE)" == "X" ]; then \
          echo "   ERROR: target not configured for VxWorks, But flag VX-WORKS=1.";\
          echo "   Installation aborted";\
          exit 88;\
        fi
       else
	@if [ "X$(WIND_BASE)" != "X" ]; then \
          echo "   ERROR: target configured for VxWorks but flag VX-WORKS not set to 1.";\
          echo "   Installation aborted";\
          exit 88;\
        fi
      endif
	@echo "... OK"
	
########################################################
# BUILD TARGETS
# These tags are used to rebuild a clean ACS + ARCHIVE
# from CVS on a target machine.
########################################################

Build-Check-ACS: check-vx
	@echo "Checking for standard build structure"
	@if [ !  -d $(ACSBUILDDIR) ]; then \
          echo "   ERROR: $(ACSBUILDDIR) does not exist. Not a standard machine";\
          echo "   Installation aborted";\
          exit 88;\
        fi

Build-Backup-ACS:
	@cd $(ACSBUILDDIR) ;\
        if [  -d ACS ]; then \
        echo "Backup current ACS build directory";\
        echo "   The directory ACS will be moved under ACS.$$$$";\
        mv ACS ACS.$$$$ > /dev/null 2>&1;\
	if [ $$? != 0 ];\
	then \
	    echo "   cannot move ACS; please check the permissions of the directory.";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi;\
        fi

Build-Backup-ARCHIVE:
	@cd $(ACSBUILDDIR) ;\
        if [  -d ARCHIVE ]; then \
        echo "Backup current ARCHIVE build directory";\
        echo "   The directory ARCHIVE will be moved under ARCHIVE.$$$$";\
        mv ARCHIVE ARCHIVE.$$$$ > /dev/null 2>&1;\
	if [ $$? != 0 ];\
	then \
	    echo "   cannot move ARCHIVE; please check the permissions of the directory.";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi;\
        fi

#
# We extract all sources for ACS (LGPL and NO-LGPL)
# but the next steps will build only the part we want.
#
Build-Extract-ACS:
	@echo "Extract ACS code from CVS - Tag: $(ACSTAG)" ;\
	cd $(ACSBUILDDIR) ;\
	if [ $$? != 0 ];\
	then \
	    echo "   Cannot switch to directory $(ACSBUILDDIR).";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi;\
        cvs -Q co -P -r $(ACSTAG) ACS/Makefile ;\
        cd ACS; make cvs-get-no-lgpl;\
	if [ $$? != 0 ];\
	then \
	    echo "   CVS checkout failed.";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi

Build-Extract-ARCHIVE:
	@echo "Extract ARCHIVE code from CVS - Tag: $(ARCHIVETAG)" ;\
	cd $(ACSBUILDDIR) ;\
	if [ $$? != 0 ];\
	then \
	    echo "   Cannot switch to directory $(ACSBUILDDIR).";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi;\
        cvs -Q co -P -r $(ARCHIVETAG) ARCHIVE;\
	if [ $$? != 0 ];\
	then \
	    echo "   CVS checkout failed.";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi

Build-Build-ACS:
	@echo "Building ACS: $(BUILD-NO-LGPL)"
	@cd $(ACSBUILDDIR)/ACS ;\
	if [ $$? != 0 ];\
	then \
	    echo "   Cannot switch to directory $(ACSBUILDDIR)/ACS.";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi;\
        $(MAKE) $(BUILD-NO-LGPL) cvs-get-version cvs-tag build_clean ;\
        echo "===> Build of ACS done!"

Build-Build-ARCHIVE:
	@echo "Building ARCHIVE"
	@cd $(ACSBUILDDIR)/ARCHIVE ;\
	if [ $$? != 0 ];\
	then \
	    echo "   Cannot switch to directory $(ACSBUILDDIR)/ARCHIVE.";\
	    echo "   Installation aborted";\
	    exit 88;\
	fi;\
        $(MAKE) build ;\
        echo "===> Build of ARCHIVE done!"

Build-ACS: Build-Check-ACS   \
           Build-Backup-ACS  \
           Build-Extract-ACS \
           Build-Build-ACS

Build-ARCHIVE: Build-Backup-ARCHIVE  \
               Build-Extract-ARCHIVE \
               Build-Build-ARCHIVE


Build-All: Build-ACS Build-ARCHIVE


# __oOo__
