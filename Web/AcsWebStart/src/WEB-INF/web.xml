<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

    <display-name>Alma ACS Web Start</display-name>
    <description>Dynamic Configuration of Alma ACS Pure Java Edition</description>


  <!-- 
     Requests directed to jnlp.html will be served by Ale's jnlp servlet.
     
     All other (directly directed) requests for jnlp files will be served by the
     JDK JnlpDownloadServlet.
     
     The elements are not grouped logically since the DTD demands them to be alphabetical
        (icon,display-name,description,distributable,context-param,filter,filter-mapping,
         listener,servlet,servlet-mapping,session-config,mime-mapping,welcome-file-list,
         error-page,taglib,resource-env-ref,resource-ref,security-constraint,login-config,
         security-role,env-entry,ejb-ref,ejb-local-ref)
     The markers "Ale" and "JDK" below provide hints for understanding. When you
     add elements make sure you insert them in the alphabetically right place.
   -->



	<!-- Ale -->
    <filter>
   <filter-name>ReqParamsFilter</filter-name>
    <filter-class>ReqParamsFilter</filter-class>
      <init-param>
      <param-name>logLevel</param-name>
      <param-value>DEBUG</param-value>
      <description>NONE, FATAL, WARNING, INFORMATIONAL, DEBUG</description>
      </init-param>
    </filter>

	<!-- Marcus -->
    <filter>
   <filter-name>StringConstantsFilter</filter-name>
    <filter-class>StringConstantsFilter</filter-class>
      <init-param>
      <param-name>logLevel</param-name>
      <param-value>DEBUG</param-value>
      <description>NONE, FATAL, WARNING, INFORMATIONAL, DEBUG</description>
      </init-param>
    </filter>




	<!-- Marcus -->
    <filter-mapping>
      <filter-name>StringConstantsFilter</filter-name>
      <servlet-name>JnlpDownloadServlet</servlet-name>
    </filter-mapping> 

	<!-- Marcus --> <!-- this filter for GetFileServlet is processed SECOND -->
    <filter-mapping>
      <filter-name>StringConstantsFilter</filter-name>
      <servlet-name>GetFileServlet</servlet-name>
    </filter-mapping> 
    
	<!-- Ale --> <!-- this filter for GetFileServlet is processed FIRST -->
    <filter-mapping>
      <filter-name>ReqParamsFilter</filter-name>
      <servlet-name>GetFileServlet</servlet-name>
    </filter-mapping> 




	<!-- Ale -->
    <servlet>
   <servlet-name>GetFileServlet</servlet-name>
    <servlet-class>GetFileServlet</servlet-class>
    <init-param>
      <param-name>logLevel</param-name>
      <param-value>DEBUG</param-value>
      <description>NONE, FATAL, WARNING, INFORMATIONAL, DEBUG</description>
      </init-param>
    </servlet>

	<!-- JDK -->
    <servlet>
   <servlet-name>JnlpDownloadServlet</servlet-name>
   <servlet-class>jnlp.sample.servlet.JnlpDownloadServlet</servlet-class>
      <init-param>
      <param-name>logLevel</param-name>
      <param-value>DEBUG</param-value>
      <description>NONE, FATAL, WARNING, INFORMATIONAL, DEBUG</description>
      </init-param>
      <init-param>
      <param-name>logPath</param-name>
      <param-value>/logs/jnlpdownloadservlet.log</param-value>
      </init-param>
    </servlet>




	<!-- Ale -->
    <servlet-mapping>
      <servlet-name>GetFileServlet</servlet-name>
      <url-pattern>/jnlp.html</url-pattern>
    </servlet-mapping>

	<!-- JDK -->
    <servlet-mapping>
        <servlet-name>JnlpDownloadServlet</servlet-name>
        <url-pattern>*.jnlp</url-pattern>
    </servlet-mapping>
  
   


</web-app>
