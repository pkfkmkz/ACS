diff -Naur pyxb-1.2.6/binding/basis.py pyxb-1.2.6-patched/binding/basis.py
--- pyxb-1.2.6/binding/basis.py	2020-02-10 18:27:49.553163748 -0300
+++ pyxb-1.2.6-patched/binding/basis.py	2020-02-11 11:23:15.967337164 -0300
@@ -525,6 +525,8 @@
             element_name = element_binding.name()
             need_xsi_type = need_xsi_type or element_binding.typeDefinition()._RequireXSIType(type(self))
         if element_name is None:
+            element_name = self._ExpandedName
+        if element_name is None:
             raise pyxb.UnboundElementError(self)
         element = bds.createChildElement(element_name, parent)
         if need_xsi_type:
diff -Naur pyxb-1.2.6/binding/content.py pyxb-1.2.6-patched/binding/content.py
--- pyxb-1.2.6/binding/content.py	2020-02-10 18:27:49.553163748 -0300
+++ pyxb-1.2.6-patched/binding/content.py	2020-02-11 11:22:32.413845098 -0300
@@ -1039,7 +1039,7 @@
         if ctd_instance._isNil():
             raise pyxb.ContentInNilInstanceError(ctd_instance, value)
         assert self.__elementBinding is not None
-        if ctd_instance._validationConfig.forBinding or isinstance(value, pyxb.BIND):
+        if True or ctd_instance._validationConfig.forBinding or isinstance(value, pyxb.BIND):
             value = self.__elementBinding.compatibleValue(value, is_plural=self.isPlural())
         setattr(ctd_instance, self.__key, value)
         ctd_instance._addContent(basis.ElementContent(value, self))
@@ -1061,7 +1061,7 @@
         if not self.isPlural():
             raise pyxb.NonPluralAppendError(ctd_instance, self, value)
         values = self.value(ctd_instance)
-        if ctd_instance._validationConfig.forBinding:
+        if True or ctd_instance._validationConfig.forBinding:
             value = self.__elementBinding.compatibleValue(value)
         values.append(value)
         ctd_instance._addContent(basis.ElementContent(value, self))
diff -Naur pyxb-1.2.6/utils/six.py pyxb-1.2.6-patched/utils/six.py
--- pyxb-1.2.6/utils/six.py	2020-02-10 18:27:49.553163748 -0300
+++ pyxb-1.2.6-patched/utils/six.py	2023-10-06 02:08:30.967337164 -0300
@@ -23,6 +23,7 @@
 from __future__ import absolute_import
 
 import functools
+import importlib
 import itertools
 import operator
 import sys
@@ -205,6 +206,11 @@
             return self
         return None
 
+    def find_spec(self, fullname, path=None, target=None):
+        if fullname in self.known_modules:
+            return importlib.machinery.ModuleSpec(fullname, self)
+        return None
+
     def __get_module(self, fullname):
         try:
             return self.known_modules[fullname]
