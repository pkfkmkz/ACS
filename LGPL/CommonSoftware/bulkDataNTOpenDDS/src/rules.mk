#*******************************************************************************
# ALMA - Atacama Large Millimeter Array
# Copyright (c) Associated Universities Inc., 2020
# (in the framework of the ALMA collaboration).
# All rights reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
#*******************************************************************************

#*******************************************************************************
# This Makefile follows ACS Standards (see Makefile(5) for more).
#*******************************************************************************
# REMARKS
#    None
#-------------------------------------------------------------------------------

# at this moment we use bulk data (NT) just in C++, and there is just C++ implementation
#MAKE_ONLY=C++,Python
MAKE_NOIFR_CHECK = on # it is DDS IDL, and we do not need to check it

################################################################################
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#  the code from here till  ... endif
#  will built just if DDS_ROOT is defined i.e. OpenDDS is installed !!!!!!!
################################################################################
ifdef DDS_ROOT

ARCH:=$(shell uname -m)
GCC_VERSION:=$(if $(filter 0,$(shell gcc -dumpfullversion &> /dev/null; echo $$?)),$(shell gcc -dumpfullversion),$(shell gcc -dumpversion))

##################################################################
# Common paramters for both C++ and Java BulkData implementation.
##################################################################

# Root of include directory for C++ header files.
INC_ROOT=../include

# Directory where IDL files for BulkData are stored.
IDL_DIR=../idl

# IDL file that defines RTI DDS interface.
DDS_IDL=$(IDL_DIR)/bulkDataOpenDDS.idl

# IDL module name for DDS. This must match the root module name
# of $(DDS_IDL).
DDS_IDL_MODULE_NAME=ACSBulkData

##################################################################
# Parameters for Java implementation: packag ename, source
# directoreis, etc.
##################################################################

#### Base Java package name.
###JAVA_PKG_NAME=alma.acs.bulkdata
###
#### Directry where Java source files reside.
###JAVA_PKG_SRC_DIR=$(subst .,/,$(JAVA_PKG_NAME))
###
#### Directory where "rtiddsgen" command generates Java source
#### files from $(DDS_IDL).
###JAVA_DDS_GEN_DIR=$(JAVA_PKG_SRC_DIR)/$(DDS_IDL_MODULE_NAME)
###
#### List of Java source files generated by "rtiddsgen" command.
#### This list must be updated when $(DDS_IDL) is edited.
###JAVA_DDS_GEN_FILES=BD_DATA.java \
###BD_PARAM.java \
###BD_STOP.java \
###BulkDataNTFrameDataReader.java \
###BulkDataNTFrameDataWriter.java \
###BulkDataNTFrame.java \
###BulkDataNTFrameSeq.java \
###BulkDataNTFrameTypeCode.java \
###BulkDataNTFrameTypeSupport.java \
###DataTypeTypeCode.java \
###FRAME_MAX_LEN.java
###
###JAVA_DDS_GEN_FILES_PATH=$(addprefix $(JAVA_DDS_GEN_DIR)/,$(JAVA_DDS_GEN_FILES))
###
#### Output directory for Javadoc.
###JAVADOC_DIR=../doc/api/html

##################################################################
# Parameters for C++ implementation.
##################################################################

# user definable C-compilation flags
USER_CFLAGS = -Wno-deprecated-declarations

# C++ source and header files generated by "rtiddsgen" command.
CPP_DDS_GEN_FILES_PATH=bulkDataOpenDDS.cpp bulkDataOpenDDSSupport.cpp bulkDataOpenDDSPlugin.cpp $(INC_ROOT)/bulkDataOpenDDS.h $(INC_ROOT)/bulkDataOpenDDSSupport.h $(INC_ROOT)/bulkDataOpenDDSPlugin.h


#
# MODULE CODE DESCRIPTION:
# ------------------------
# As a general rule:  public file are "cleaned" and "installed"  
#                     local (_L) are not "installed".

#
# C programs (public and local)
# -----------------------------
EXECUTABLES     =  bulkDataOpenDDSGenSender bulkDataOpenDDSGenReceiver bulkDataOpenDDSGenReceiverSender #ddsPubTest ddsSubTest
EXECUTABLES_L   = 

bulkDataOpenDDSGenSender_OBJECTS = bulkDataOpenDDSGenSender
bulkDataOpenDDSGenSender_LIBS= bulkDataOpenDDSSender acsnc bulkDataStubs

bulkDataOpenDDSGenReceiver_OBJECTS = bulkDataOpenDDSGenReceiver
bulkDataOpenDDSGenReceiver_LIBS= bulkDataOpenDDSReceiver

bulkDataOpenDDSGenReceiverSender_OBJECTS = bulkDataOpenDDSGenReceiverSender bulkDataOpenDDSArrayThread bulkDataOpenDDSGenStreamerThread
bulkDataOpenDDSGenReceiverSender_LIBS= bulkDataOpenDDSSender bulkDataOpenDDSReceiver bulkDataOpenDDSThreadUtils bulkDataOpenDDSEx acsnc

ddsPubTest_OBJECTS=ddsPublisher 
ddsPubTest_LIBS=pthread ACSErrTypeCommon acserr dl

ddsSubTest_OBJECTS=ddsSubscriber
ddsSubTest_LIBS=pthread ACSErrTypeCommon acserr dl

#
# Includes (.h) files (public only)
# ---------------------------------
INCLUDES        = bulkDataOpenDDSCallback.h bulkDataOpenDDSDDS.h bulkDataOpenDDSDDSPublisher.h bulkDataOpenDDSDDSSubscriber.h \
				bulkDataOpenDDS.h bulkDataOpenDDSPlugin.h bulkDataOpenDDSReaderListener.h bulkDataOpenDDSReceiverFlow.h \
				bulkDataOpenDDSReceiverImpl.h bulkDataOpenDDSReceiverImpl.i bulkDataOpenDDSReceiverStream.h bulkDataOpenDDSReceiverStream.i \
				bulkDataOpenDDSSenderFlow.h bulkDataOpenDDSSenderImpl.h bulkDataOpenDDSSenderStream.h bulkDataOpenDDSStream.h bulkDataOpenDDSSupport.h \
				bulkDataOpenDDSFlow.h bulkDataOpenDDSWriterListener.h bulkDataOpenDDSDDSLoggable.h bulkDataOpenDDSSenderFlowCallback.h \
				bulkDataOpenDDSConfiguration.h bulkDataOpenDDSConfigurationParser.h \
				bulkDataOpenDDSArrayThread.h bulkDataOpenDDSPosixHelper.h bulkDataOpenDDSThreadSyncGuard.h \
				bulkDataOpenDDSGenEx.h bulkDataOpenDDSProcessQueue.h


#
# Libraries (public and local)
# ----------------------------
LIBRARIES       = bulkDataOpenDDS bulkDataOpenDDSSender bulkDataOpenDDSReceiver bulkDataOpenDDSSenderImpl bulkDataOpenDDSThreadUtils bulkDataOpenDDSEx	
LIBRARIES_L     =

#
# <brief description of lllll library>
bulkDataOpenDDS_OBJECTS   = bulkDataOpenDDSDDS bulkDataOpenDDSStream bulkDataOpenDDSConfiguration bulkDataOpenDDSConfigurationParser \
					bulkDataOpenDDSDDSLoggable bulkDataOpenDDSLibMgmt
bulkDataOpenDDS_LIBS = ACSErrTypeCommon ACS_BD_Errors ACS_DDS_Errors bulkDataOpenDDSTypeSupportStubs bulkDataOpenDDSStubs xerces-c \
			maciClient OpenDDS_Rtps_Udp OpenDDS_QOS_XML_XSC_Handler OpenDDS_Dcps

bulkDataOpenDDSSender_OBJECTS    = bulkDataOpenDDSSenderStream bulkDataOpenDDSSenderFlow bulkDataOpenDDSDDSPublisher \
							  bulkDataOpenDDSWriterListener bulkDataOpenDDSSenderFlowCallback
bulkDataOpenDDSSender_LIBS = bulkDataOpenDDS bulkDataSenderStubs baci acsnc ACSErrTypeCommon

bulkDataOpenDDSSenderImpl_OBJECTS = bulkDataOpenDDSSenderImpl
bulkDataOpenDDSSenderImpl_LIBS = bulkDataOpenDDSSender acsnc

bulkDataOpenDDSThreadUtils_OBJECTS = bulkDataOpenDDSPosixHelper bulkDataOpenDDSThreadSyncGuard
bulkDataOpenDDSThreadUtils_LIBS = pthread ACE logging acsThread acstime

bulkDataOpenDDSEx_OBJECTS = bulkDataOpenDDSGenEx
bulkDataOpenDDSEx_LD_FLAGS = 
bulkDataOpenDDSEx_LIBS = acsnc 

bulkDataOpenDDSReceiver_OBJECTS   = bulkDataOpenDDSReceiverFlow bulkDataOpenDDSDDSSubscriber \
							   bulkDataOpenDDSReaderListener bulkDataOpenDDSCallback bulkDataOpenDDSProcessQueue
bulkDataOpenDDSReceiver_LIBS = bulkDataOpenDDS RepeatGuard bulkDataStubs acsnc ACSErrTypeCommon OpenDDS_Multicast


#
# Scripts (public and local)
# ----------------------------
SCRIPTS         = #bulkDataOpenDDSGenSenderJava bulkDataOpenDDSJavaEnv
SCRIPTS_L       =

#
# TCL scripts (public and local)
# ------------------------------
TCL_SCRIPTS     =
TCL_SCRIPTS_L   =

#
# Python stuff (public and local)
# ----------------------------
#PY_SCRIPTS         = bulkDataOpenDDSremoteTest
PY_SCRIPTS_L       =

PY_MODULES         =
PY_MODULES_L       =

PY_PACKAGES        =
PY_PACKAGES_L      =
pppppp_MODULES	   =

#
# <brief description of tttttt tcl-script>
tttttt_OBJECTS  =
tttttt_TCLSH    = 
tttttt_LIBS     = 

#
# TCL libraries (public and local)
# ------------------------------
TCL_LIBRARIES   =
TCL_LIBRARIES_L =

#
# <brief description of tttlll library>
tttlll_OBJECTS  = 

USE_OPENDDS = 1
DDS_FILES = bulkDataOpenDDS
IDL_FILES = bulkDataOpenDDS

bulkDataOpenDDSStubs_LIBS = OpenDDS_Tcp OpenDDS_InfoRepoDiscovery OpenDDS_Dcps maci


endif #ifdef DDS_ROOT
################################################################################
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#  the code from ifdef NDDSHOME till  here
#  .... will built just if NDDSHOME is defeined i.e. RTI DDS is isntalled !!!!!!!
################################################################################

#
# Configuration Database Files
# ----------------------------
CDB_SCHEMAS = BulkDataNTReceiver BulkDataNTSender acs_rti_dds_qos_profiles

# 
# IDL Files and flags
# 
IDL_FILES += bulkData bulkDataReceiver bulkDataSender bulkDataDistributer
TAO_IDLFLAGS =
USER_IDL =

bulkDataStubs_LIBS = TAO_AV acstime

bulkDataReceiverStubs_LIBS = baciStubs ACSBulkDataError ACSBulkDataStatus bulkDataStubs

bulkDataSenderStubs_LIBS = baciStubs ACSBulkDataError bulkDataStubs bulkDataReceiverStubs

bulkDataDistributerStubs_LIBS = baciStubs ACSErrTypeCommon ACSBulkDataError bulkDataStubs bulkDataReceiverStubs bulkDataSenderStubs

####
#### Jarfiles and their directories
####
###JARFILES=jBulkData
###jBulkData_DIRS=alma
###jBulkData_EXTRAS=
###jBulkData_EXTRA_SRCS=$(JAVA_DDS_GEN_FILES_PATH)
###jBulkData_JFLAGS=-Xlint:unchecked

ACSERRDEF = ACS_BD_Errors ACS_DDS_Errors ACSBulkDataError ACSBulkDataStatus

#
# java sources in Jarfile on/off
DEBUG= 
#
# ACS XmlIdl generation on/off
#
XML_IDL= 
#
# Java Component Helper Classes generation on/off
#
COMPONENT_HELPERS=
#
# Java Entity Classes generation on/off
#
XSDBIND=
#
# Schema Config files for the above
#
XSDBIND_INCLUDE=
# man pages to be done
# --------------------
MANSECTIONS =
MAN1 =
MAN3 =
MAN5 =
MAN7 =
MAN8 =

#
# local man pages
# ---------------
MANl =

#
# ASCII file to be converted into Framemaker-MIF
# --------------------
ASCII_TO_MIF = 

#
# other files to be installed
#----------------------------
INSTALL_FILES =
